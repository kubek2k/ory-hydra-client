{-
   ORY Hydra

   Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here.

   OpenAPI Version: 3.0.1
   ORY Hydra API version: latest
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ORYHydra.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ORYHydra.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import ORYHydra.Model
import ORYHydra.Core


-- * AcceptConsentRequest

-- | 'acceptConsentRequestGrantAccessTokenAudience' Lens
acceptConsentRequestGrantAccessTokenAudienceL :: Lens_' AcceptConsentRequest (Maybe [Text])
acceptConsentRequestGrantAccessTokenAudienceL f AcceptConsentRequest{..} = (\acceptConsentRequestGrantAccessTokenAudience -> AcceptConsentRequest { acceptConsentRequestGrantAccessTokenAudience, ..} ) <$> f acceptConsentRequestGrantAccessTokenAudience
{-# INLINE acceptConsentRequestGrantAccessTokenAudienceL #-}

-- | 'acceptConsentRequestGrantScope' Lens
acceptConsentRequestGrantScopeL :: Lens_' AcceptConsentRequest (Maybe [Text])
acceptConsentRequestGrantScopeL f AcceptConsentRequest{..} = (\acceptConsentRequestGrantScope -> AcceptConsentRequest { acceptConsentRequestGrantScope, ..} ) <$> f acceptConsentRequestGrantScope
{-# INLINE acceptConsentRequestGrantScopeL #-}

-- | 'acceptConsentRequestHandledAt' Lens
acceptConsentRequestHandledAtL :: Lens_' AcceptConsentRequest (Maybe DateTime)
acceptConsentRequestHandledAtL f AcceptConsentRequest{..} = (\acceptConsentRequestHandledAt -> AcceptConsentRequest { acceptConsentRequestHandledAt, ..} ) <$> f acceptConsentRequestHandledAt
{-# INLINE acceptConsentRequestHandledAtL #-}

-- | 'acceptConsentRequestRemember' Lens
acceptConsentRequestRememberL :: Lens_' AcceptConsentRequest (Maybe Bool)
acceptConsentRequestRememberL f AcceptConsentRequest{..} = (\acceptConsentRequestRemember -> AcceptConsentRequest { acceptConsentRequestRemember, ..} ) <$> f acceptConsentRequestRemember
{-# INLINE acceptConsentRequestRememberL #-}

-- | 'acceptConsentRequestRememberFor' Lens
acceptConsentRequestRememberForL :: Lens_' AcceptConsentRequest (Maybe Integer)
acceptConsentRequestRememberForL f AcceptConsentRequest{..} = (\acceptConsentRequestRememberFor -> AcceptConsentRequest { acceptConsentRequestRememberFor, ..} ) <$> f acceptConsentRequestRememberFor
{-# INLINE acceptConsentRequestRememberForL #-}

-- | 'acceptConsentRequestSession' Lens
acceptConsentRequestSessionL :: Lens_' AcceptConsentRequest (Maybe ConsentRequestSession)
acceptConsentRequestSessionL f AcceptConsentRequest{..} = (\acceptConsentRequestSession -> AcceptConsentRequest { acceptConsentRequestSession, ..} ) <$> f acceptConsentRequestSession
{-# INLINE acceptConsentRequestSessionL #-}



-- * AcceptLoginRequest

-- | 'acceptLoginRequestAcr' Lens
acceptLoginRequestAcrL :: Lens_' AcceptLoginRequest (Maybe Text)
acceptLoginRequestAcrL f AcceptLoginRequest{..} = (\acceptLoginRequestAcr -> AcceptLoginRequest { acceptLoginRequestAcr, ..} ) <$> f acceptLoginRequestAcr
{-# INLINE acceptLoginRequestAcrL #-}

-- | 'acceptLoginRequestContext' Lens
acceptLoginRequestContextL :: Lens_' AcceptLoginRequest (Maybe A.Value)
acceptLoginRequestContextL f AcceptLoginRequest{..} = (\acceptLoginRequestContext -> AcceptLoginRequest { acceptLoginRequestContext, ..} ) <$> f acceptLoginRequestContext
{-# INLINE acceptLoginRequestContextL #-}

-- | 'acceptLoginRequestForceSubjectIdentifier' Lens
acceptLoginRequestForceSubjectIdentifierL :: Lens_' AcceptLoginRequest (Maybe Text)
acceptLoginRequestForceSubjectIdentifierL f AcceptLoginRequest{..} = (\acceptLoginRequestForceSubjectIdentifier -> AcceptLoginRequest { acceptLoginRequestForceSubjectIdentifier, ..} ) <$> f acceptLoginRequestForceSubjectIdentifier
{-# INLINE acceptLoginRequestForceSubjectIdentifierL #-}

-- | 'acceptLoginRequestRemember' Lens
acceptLoginRequestRememberL :: Lens_' AcceptLoginRequest (Maybe Bool)
acceptLoginRequestRememberL f AcceptLoginRequest{..} = (\acceptLoginRequestRemember -> AcceptLoginRequest { acceptLoginRequestRemember, ..} ) <$> f acceptLoginRequestRemember
{-# INLINE acceptLoginRequestRememberL #-}

-- | 'acceptLoginRequestRememberFor' Lens
acceptLoginRequestRememberForL :: Lens_' AcceptLoginRequest (Maybe Integer)
acceptLoginRequestRememberForL f AcceptLoginRequest{..} = (\acceptLoginRequestRememberFor -> AcceptLoginRequest { acceptLoginRequestRememberFor, ..} ) <$> f acceptLoginRequestRememberFor
{-# INLINE acceptLoginRequestRememberForL #-}

-- | 'acceptLoginRequestSubject' Lens
acceptLoginRequestSubjectL :: Lens_' AcceptLoginRequest (Text)
acceptLoginRequestSubjectL f AcceptLoginRequest{..} = (\acceptLoginRequestSubject -> AcceptLoginRequest { acceptLoginRequestSubject, ..} ) <$> f acceptLoginRequestSubject
{-# INLINE acceptLoginRequestSubjectL #-}



-- * CompletedRequest

-- | 'completedRequestRedirectTo' Lens
completedRequestRedirectToL :: Lens_' CompletedRequest (Text)
completedRequestRedirectToL f CompletedRequest{..} = (\completedRequestRedirectTo -> CompletedRequest { completedRequestRedirectTo, ..} ) <$> f completedRequestRedirectTo
{-# INLINE completedRequestRedirectToL #-}



-- * ConsentRequest

-- | 'consentRequestAcr' Lens
consentRequestAcrL :: Lens_' ConsentRequest (Maybe Text)
consentRequestAcrL f ConsentRequest{..} = (\consentRequestAcr -> ConsentRequest { consentRequestAcr, ..} ) <$> f consentRequestAcr
{-# INLINE consentRequestAcrL #-}

-- | 'consentRequestChallenge' Lens
consentRequestChallengeL :: Lens_' ConsentRequest (Text)
consentRequestChallengeL f ConsentRequest{..} = (\consentRequestChallenge -> ConsentRequest { consentRequestChallenge, ..} ) <$> f consentRequestChallenge
{-# INLINE consentRequestChallengeL #-}

-- | 'consentRequestClient' Lens
consentRequestClientL :: Lens_' ConsentRequest (Maybe OAuth2Client)
consentRequestClientL f ConsentRequest{..} = (\consentRequestClient -> ConsentRequest { consentRequestClient, ..} ) <$> f consentRequestClient
{-# INLINE consentRequestClientL #-}

-- | 'consentRequestContext' Lens
consentRequestContextL :: Lens_' ConsentRequest (Maybe A.Value)
consentRequestContextL f ConsentRequest{..} = (\consentRequestContext -> ConsentRequest { consentRequestContext, ..} ) <$> f consentRequestContext
{-# INLINE consentRequestContextL #-}

-- | 'consentRequestLoginChallenge' Lens
consentRequestLoginChallengeL :: Lens_' ConsentRequest (Maybe Text)
consentRequestLoginChallengeL f ConsentRequest{..} = (\consentRequestLoginChallenge -> ConsentRequest { consentRequestLoginChallenge, ..} ) <$> f consentRequestLoginChallenge
{-# INLINE consentRequestLoginChallengeL #-}

-- | 'consentRequestLoginSessionId' Lens
consentRequestLoginSessionIdL :: Lens_' ConsentRequest (Maybe Text)
consentRequestLoginSessionIdL f ConsentRequest{..} = (\consentRequestLoginSessionId -> ConsentRequest { consentRequestLoginSessionId, ..} ) <$> f consentRequestLoginSessionId
{-# INLINE consentRequestLoginSessionIdL #-}

-- | 'consentRequestOidcContext' Lens
consentRequestOidcContextL :: Lens_' ConsentRequest (Maybe OpenIDConnectContext)
consentRequestOidcContextL f ConsentRequest{..} = (\consentRequestOidcContext -> ConsentRequest { consentRequestOidcContext, ..} ) <$> f consentRequestOidcContext
{-# INLINE consentRequestOidcContextL #-}

-- | 'consentRequestRequestUrl' Lens
consentRequestRequestUrlL :: Lens_' ConsentRequest (Maybe Text)
consentRequestRequestUrlL f ConsentRequest{..} = (\consentRequestRequestUrl -> ConsentRequest { consentRequestRequestUrl, ..} ) <$> f consentRequestRequestUrl
{-# INLINE consentRequestRequestUrlL #-}

-- | 'consentRequestRequestedAccessTokenAudience' Lens
consentRequestRequestedAccessTokenAudienceL :: Lens_' ConsentRequest (Maybe [Text])
consentRequestRequestedAccessTokenAudienceL f ConsentRequest{..} = (\consentRequestRequestedAccessTokenAudience -> ConsentRequest { consentRequestRequestedAccessTokenAudience, ..} ) <$> f consentRequestRequestedAccessTokenAudience
{-# INLINE consentRequestRequestedAccessTokenAudienceL #-}

-- | 'consentRequestRequestedScope' Lens
consentRequestRequestedScopeL :: Lens_' ConsentRequest (Maybe [Text])
consentRequestRequestedScopeL f ConsentRequest{..} = (\consentRequestRequestedScope -> ConsentRequest { consentRequestRequestedScope, ..} ) <$> f consentRequestRequestedScope
{-# INLINE consentRequestRequestedScopeL #-}

-- | 'consentRequestSkip' Lens
consentRequestSkipL :: Lens_' ConsentRequest (Maybe Bool)
consentRequestSkipL f ConsentRequest{..} = (\consentRequestSkip -> ConsentRequest { consentRequestSkip, ..} ) <$> f consentRequestSkip
{-# INLINE consentRequestSkipL #-}

-- | 'consentRequestSubject' Lens
consentRequestSubjectL :: Lens_' ConsentRequest (Maybe Text)
consentRequestSubjectL f ConsentRequest{..} = (\consentRequestSubject -> ConsentRequest { consentRequestSubject, ..} ) <$> f consentRequestSubject
{-# INLINE consentRequestSubjectL #-}



-- * ConsentRequestSession

-- | 'consentRequestSessionAccessToken' Lens
consentRequestSessionAccessTokenL :: Lens_' ConsentRequestSession (Maybe A.Value)
consentRequestSessionAccessTokenL f ConsentRequestSession{..} = (\consentRequestSessionAccessToken -> ConsentRequestSession { consentRequestSessionAccessToken, ..} ) <$> f consentRequestSessionAccessToken
{-# INLINE consentRequestSessionAccessTokenL #-}

-- | 'consentRequestSessionIdToken' Lens
consentRequestSessionIdTokenL :: Lens_' ConsentRequestSession (Maybe A.Value)
consentRequestSessionIdTokenL f ConsentRequestSession{..} = (\consentRequestSessionIdToken -> ConsentRequestSession { consentRequestSessionIdToken, ..} ) <$> f consentRequestSessionIdToken
{-# INLINE consentRequestSessionIdTokenL #-}



-- * ContainerWaitOKBodyError

-- | 'containerWaitOKBodyErrorMessage' Lens
containerWaitOKBodyErrorMessageL :: Lens_' ContainerWaitOKBodyError (Maybe Text)
containerWaitOKBodyErrorMessageL f ContainerWaitOKBodyError{..} = (\containerWaitOKBodyErrorMessage -> ContainerWaitOKBodyError { containerWaitOKBodyErrorMessage, ..} ) <$> f containerWaitOKBodyErrorMessage
{-# INLINE containerWaitOKBodyErrorMessageL #-}



-- * FlushInactiveOAuth2TokensRequest

-- | 'flushInactiveOAuth2TokensRequestNotAfter' Lens
flushInactiveOAuth2TokensRequestNotAfterL :: Lens_' FlushInactiveOAuth2TokensRequest (Maybe DateTime)
flushInactiveOAuth2TokensRequestNotAfterL f FlushInactiveOAuth2TokensRequest{..} = (\flushInactiveOAuth2TokensRequestNotAfter -> FlushInactiveOAuth2TokensRequest { flushInactiveOAuth2TokensRequestNotAfter, ..} ) <$> f flushInactiveOAuth2TokensRequestNotAfter
{-# INLINE flushInactiveOAuth2TokensRequestNotAfterL #-}



-- * GenericError

-- | 'genericErrorDebug' Lens
genericErrorDebugL :: Lens_' GenericError (Maybe Text)
genericErrorDebugL f GenericError{..} = (\genericErrorDebug -> GenericError { genericErrorDebug, ..} ) <$> f genericErrorDebug
{-# INLINE genericErrorDebugL #-}

-- | 'genericErrorError' Lens
genericErrorErrorL :: Lens_' GenericError (Text)
genericErrorErrorL f GenericError{..} = (\genericErrorError -> GenericError { genericErrorError, ..} ) <$> f genericErrorError
{-# INLINE genericErrorErrorL #-}

-- | 'genericErrorErrorDescription' Lens
genericErrorErrorDescriptionL :: Lens_' GenericError (Maybe Text)
genericErrorErrorDescriptionL f GenericError{..} = (\genericErrorErrorDescription -> GenericError { genericErrorErrorDescription, ..} ) <$> f genericErrorErrorDescription
{-# INLINE genericErrorErrorDescriptionL #-}

-- | 'genericErrorStatusCode' Lens
genericErrorStatusCodeL :: Lens_' GenericError (Maybe Integer)
genericErrorStatusCodeL f GenericError{..} = (\genericErrorStatusCode -> GenericError { genericErrorStatusCode, ..} ) <$> f genericErrorStatusCode
{-# INLINE genericErrorStatusCodeL #-}



-- * HealthNotReadyStatus

-- | 'healthNotReadyStatusErrors' Lens
healthNotReadyStatusErrorsL :: Lens_' HealthNotReadyStatus (Maybe (Map.Map String Text))
healthNotReadyStatusErrorsL f HealthNotReadyStatus{..} = (\healthNotReadyStatusErrors -> HealthNotReadyStatus { healthNotReadyStatusErrors, ..} ) <$> f healthNotReadyStatusErrors
{-# INLINE healthNotReadyStatusErrorsL #-}



-- * HealthStatus

-- | 'healthStatusStatus' Lens
healthStatusStatusL :: Lens_' HealthStatus (Maybe Text)
healthStatusStatusL f HealthStatus{..} = (\healthStatusStatus -> HealthStatus { healthStatusStatus, ..} ) <$> f healthStatusStatus
{-# INLINE healthStatusStatusL #-}



-- * JSONWebKey

-- | 'jSONWebKeyAlg' Lens
jSONWebKeyAlgL :: Lens_' JSONWebKey (Text)
jSONWebKeyAlgL f JSONWebKey{..} = (\jSONWebKeyAlg -> JSONWebKey { jSONWebKeyAlg, ..} ) <$> f jSONWebKeyAlg
{-# INLINE jSONWebKeyAlgL #-}

-- | 'jSONWebKeyCrv' Lens
jSONWebKeyCrvL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyCrvL f JSONWebKey{..} = (\jSONWebKeyCrv -> JSONWebKey { jSONWebKeyCrv, ..} ) <$> f jSONWebKeyCrv
{-# INLINE jSONWebKeyCrvL #-}

-- | 'jSONWebKeyD' Lens
jSONWebKeyDL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyDL f JSONWebKey{..} = (\jSONWebKeyD -> JSONWebKey { jSONWebKeyD, ..} ) <$> f jSONWebKeyD
{-# INLINE jSONWebKeyDL #-}

-- | 'jSONWebKeyDp' Lens
jSONWebKeyDpL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyDpL f JSONWebKey{..} = (\jSONWebKeyDp -> JSONWebKey { jSONWebKeyDp, ..} ) <$> f jSONWebKeyDp
{-# INLINE jSONWebKeyDpL #-}

-- | 'jSONWebKeyDq' Lens
jSONWebKeyDqL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyDqL f JSONWebKey{..} = (\jSONWebKeyDq -> JSONWebKey { jSONWebKeyDq, ..} ) <$> f jSONWebKeyDq
{-# INLINE jSONWebKeyDqL #-}

-- | 'jSONWebKeyE' Lens
jSONWebKeyEL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyEL f JSONWebKey{..} = (\jSONWebKeyE -> JSONWebKey { jSONWebKeyE, ..} ) <$> f jSONWebKeyE
{-# INLINE jSONWebKeyEL #-}

-- | 'jSONWebKeyK' Lens
jSONWebKeyKL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyKL f JSONWebKey{..} = (\jSONWebKeyK -> JSONWebKey { jSONWebKeyK, ..} ) <$> f jSONWebKeyK
{-# INLINE jSONWebKeyKL #-}

-- | 'jSONWebKeyKid' Lens
jSONWebKeyKidL :: Lens_' JSONWebKey (Text)
jSONWebKeyKidL f JSONWebKey{..} = (\jSONWebKeyKid -> JSONWebKey { jSONWebKeyKid, ..} ) <$> f jSONWebKeyKid
{-# INLINE jSONWebKeyKidL #-}

-- | 'jSONWebKeyKty' Lens
jSONWebKeyKtyL :: Lens_' JSONWebKey (Text)
jSONWebKeyKtyL f JSONWebKey{..} = (\jSONWebKeyKty -> JSONWebKey { jSONWebKeyKty, ..} ) <$> f jSONWebKeyKty
{-# INLINE jSONWebKeyKtyL #-}

-- | 'jSONWebKeyN' Lens
jSONWebKeyNL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyNL f JSONWebKey{..} = (\jSONWebKeyN -> JSONWebKey { jSONWebKeyN, ..} ) <$> f jSONWebKeyN
{-# INLINE jSONWebKeyNL #-}

-- | 'jSONWebKeyP' Lens
jSONWebKeyPL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyPL f JSONWebKey{..} = (\jSONWebKeyP -> JSONWebKey { jSONWebKeyP, ..} ) <$> f jSONWebKeyP
{-# INLINE jSONWebKeyPL #-}

-- | 'jSONWebKeyQ' Lens
jSONWebKeyQL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyQL f JSONWebKey{..} = (\jSONWebKeyQ -> JSONWebKey { jSONWebKeyQ, ..} ) <$> f jSONWebKeyQ
{-# INLINE jSONWebKeyQL #-}

-- | 'jSONWebKeyQi' Lens
jSONWebKeyQiL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyQiL f JSONWebKey{..} = (\jSONWebKeyQi -> JSONWebKey { jSONWebKeyQi, ..} ) <$> f jSONWebKeyQi
{-# INLINE jSONWebKeyQiL #-}

-- | 'jSONWebKeyUse' Lens
jSONWebKeyUseL :: Lens_' JSONWebKey (Text)
jSONWebKeyUseL f JSONWebKey{..} = (\jSONWebKeyUse -> JSONWebKey { jSONWebKeyUse, ..} ) <$> f jSONWebKeyUse
{-# INLINE jSONWebKeyUseL #-}

-- | 'jSONWebKeyX' Lens
jSONWebKeyXL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyXL f JSONWebKey{..} = (\jSONWebKeyX -> JSONWebKey { jSONWebKeyX, ..} ) <$> f jSONWebKeyX
{-# INLINE jSONWebKeyXL #-}

-- | 'jSONWebKeyX5c' Lens
jSONWebKeyX5cL :: Lens_' JSONWebKey (Maybe [Text])
jSONWebKeyX5cL f JSONWebKey{..} = (\jSONWebKeyX5c -> JSONWebKey { jSONWebKeyX5c, ..} ) <$> f jSONWebKeyX5c
{-# INLINE jSONWebKeyX5cL #-}

-- | 'jSONWebKeyY' Lens
jSONWebKeyYL :: Lens_' JSONWebKey (Maybe Text)
jSONWebKeyYL f JSONWebKey{..} = (\jSONWebKeyY -> JSONWebKey { jSONWebKeyY, ..} ) <$> f jSONWebKeyY
{-# INLINE jSONWebKeyYL #-}



-- * JSONWebKeySet

-- | 'jSONWebKeySetKeys' Lens
jSONWebKeySetKeysL :: Lens_' JSONWebKeySet (Maybe [JSONWebKey])
jSONWebKeySetKeysL f JSONWebKeySet{..} = (\jSONWebKeySetKeys -> JSONWebKeySet { jSONWebKeySetKeys, ..} ) <$> f jSONWebKeySetKeys
{-# INLINE jSONWebKeySetKeysL #-}



-- * JsonWebKeySetGeneratorRequest

-- | 'jsonWebKeySetGeneratorRequestAlg' Lens
jsonWebKeySetGeneratorRequestAlgL :: Lens_' JsonWebKeySetGeneratorRequest (Text)
jsonWebKeySetGeneratorRequestAlgL f JsonWebKeySetGeneratorRequest{..} = (\jsonWebKeySetGeneratorRequestAlg -> JsonWebKeySetGeneratorRequest { jsonWebKeySetGeneratorRequestAlg, ..} ) <$> f jsonWebKeySetGeneratorRequestAlg
{-# INLINE jsonWebKeySetGeneratorRequestAlgL #-}

-- | 'jsonWebKeySetGeneratorRequestKid' Lens
jsonWebKeySetGeneratorRequestKidL :: Lens_' JsonWebKeySetGeneratorRequest (Text)
jsonWebKeySetGeneratorRequestKidL f JsonWebKeySetGeneratorRequest{..} = (\jsonWebKeySetGeneratorRequestKid -> JsonWebKeySetGeneratorRequest { jsonWebKeySetGeneratorRequestKid, ..} ) <$> f jsonWebKeySetGeneratorRequestKid
{-# INLINE jsonWebKeySetGeneratorRequestKidL #-}

-- | 'jsonWebKeySetGeneratorRequestUse' Lens
jsonWebKeySetGeneratorRequestUseL :: Lens_' JsonWebKeySetGeneratorRequest (Text)
jsonWebKeySetGeneratorRequestUseL f JsonWebKeySetGeneratorRequest{..} = (\jsonWebKeySetGeneratorRequestUse -> JsonWebKeySetGeneratorRequest { jsonWebKeySetGeneratorRequestUse, ..} ) <$> f jsonWebKeySetGeneratorRequestUse
{-# INLINE jsonWebKeySetGeneratorRequestUseL #-}



-- * LoginRequest

-- | 'loginRequestChallenge' Lens
loginRequestChallengeL :: Lens_' LoginRequest (Text)
loginRequestChallengeL f LoginRequest{..} = (\loginRequestChallenge -> LoginRequest { loginRequestChallenge, ..} ) <$> f loginRequestChallenge
{-# INLINE loginRequestChallengeL #-}

-- | 'loginRequestClient' Lens
loginRequestClientL :: Lens_' LoginRequest (OAuth2Client)
loginRequestClientL f LoginRequest{..} = (\loginRequestClient -> LoginRequest { loginRequestClient, ..} ) <$> f loginRequestClient
{-# INLINE loginRequestClientL #-}

-- | 'loginRequestOidcContext' Lens
loginRequestOidcContextL :: Lens_' LoginRequest (Maybe OpenIDConnectContext)
loginRequestOidcContextL f LoginRequest{..} = (\loginRequestOidcContext -> LoginRequest { loginRequestOidcContext, ..} ) <$> f loginRequestOidcContext
{-# INLINE loginRequestOidcContextL #-}

-- | 'loginRequestRequestUrl' Lens
loginRequestRequestUrlL :: Lens_' LoginRequest (Text)
loginRequestRequestUrlL f LoginRequest{..} = (\loginRequestRequestUrl -> LoginRequest { loginRequestRequestUrl, ..} ) <$> f loginRequestRequestUrl
{-# INLINE loginRequestRequestUrlL #-}

-- | 'loginRequestRequestedAccessTokenAudience' Lens
loginRequestRequestedAccessTokenAudienceL :: Lens_' LoginRequest ([Text])
loginRequestRequestedAccessTokenAudienceL f LoginRequest{..} = (\loginRequestRequestedAccessTokenAudience -> LoginRequest { loginRequestRequestedAccessTokenAudience, ..} ) <$> f loginRequestRequestedAccessTokenAudience
{-# INLINE loginRequestRequestedAccessTokenAudienceL #-}

-- | 'loginRequestRequestedScope' Lens
loginRequestRequestedScopeL :: Lens_' LoginRequest ([Text])
loginRequestRequestedScopeL f LoginRequest{..} = (\loginRequestRequestedScope -> LoginRequest { loginRequestRequestedScope, ..} ) <$> f loginRequestRequestedScope
{-# INLINE loginRequestRequestedScopeL #-}

-- | 'loginRequestSessionId' Lens
loginRequestSessionIdL :: Lens_' LoginRequest (Maybe Text)
loginRequestSessionIdL f LoginRequest{..} = (\loginRequestSessionId -> LoginRequest { loginRequestSessionId, ..} ) <$> f loginRequestSessionId
{-# INLINE loginRequestSessionIdL #-}

-- | 'loginRequestSkip' Lens
loginRequestSkipL :: Lens_' LoginRequest (Bool)
loginRequestSkipL f LoginRequest{..} = (\loginRequestSkip -> LoginRequest { loginRequestSkip, ..} ) <$> f loginRequestSkip
{-# INLINE loginRequestSkipL #-}

-- | 'loginRequestSubject' Lens
loginRequestSubjectL :: Lens_' LoginRequest (Text)
loginRequestSubjectL f LoginRequest{..} = (\loginRequestSubject -> LoginRequest { loginRequestSubject, ..} ) <$> f loginRequestSubject
{-# INLINE loginRequestSubjectL #-}



-- * LogoutRequest

-- | 'logoutRequestRequestUrl' Lens
logoutRequestRequestUrlL :: Lens_' LogoutRequest (Maybe Text)
logoutRequestRequestUrlL f LogoutRequest{..} = (\logoutRequestRequestUrl -> LogoutRequest { logoutRequestRequestUrl, ..} ) <$> f logoutRequestRequestUrl
{-# INLINE logoutRequestRequestUrlL #-}

-- | 'logoutRequestRpInitiated' Lens
logoutRequestRpInitiatedL :: Lens_' LogoutRequest (Maybe Bool)
logoutRequestRpInitiatedL f LogoutRequest{..} = (\logoutRequestRpInitiated -> LogoutRequest { logoutRequestRpInitiated, ..} ) <$> f logoutRequestRpInitiated
{-# INLINE logoutRequestRpInitiatedL #-}

-- | 'logoutRequestSid' Lens
logoutRequestSidL :: Lens_' LogoutRequest (Maybe Text)
logoutRequestSidL f LogoutRequest{..} = (\logoutRequestSid -> LogoutRequest { logoutRequestSid, ..} ) <$> f logoutRequestSid
{-# INLINE logoutRequestSidL #-}

-- | 'logoutRequestSubject' Lens
logoutRequestSubjectL :: Lens_' LogoutRequest (Maybe Text)
logoutRequestSubjectL f LogoutRequest{..} = (\logoutRequestSubject -> LogoutRequest { logoutRequestSubject, ..} ) <$> f logoutRequestSubject
{-# INLINE logoutRequestSubjectL #-}



-- * OAuth2Client

-- | 'oAuth2ClientAllowedCorsOrigins' Lens
oAuth2ClientAllowedCorsOriginsL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientAllowedCorsOriginsL f OAuth2Client{..} = (\oAuth2ClientAllowedCorsOrigins -> OAuth2Client { oAuth2ClientAllowedCorsOrigins, ..} ) <$> f oAuth2ClientAllowedCorsOrigins
{-# INLINE oAuth2ClientAllowedCorsOriginsL #-}

-- | 'oAuth2ClientAudience' Lens
oAuth2ClientAudienceL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientAudienceL f OAuth2Client{..} = (\oAuth2ClientAudience -> OAuth2Client { oAuth2ClientAudience, ..} ) <$> f oAuth2ClientAudience
{-# INLINE oAuth2ClientAudienceL #-}

-- | 'oAuth2ClientBackchannelLogoutSessionRequired' Lens
oAuth2ClientBackchannelLogoutSessionRequiredL :: Lens_' OAuth2Client (Maybe Bool)
oAuth2ClientBackchannelLogoutSessionRequiredL f OAuth2Client{..} = (\oAuth2ClientBackchannelLogoutSessionRequired -> OAuth2Client { oAuth2ClientBackchannelLogoutSessionRequired, ..} ) <$> f oAuth2ClientBackchannelLogoutSessionRequired
{-# INLINE oAuth2ClientBackchannelLogoutSessionRequiredL #-}

-- | 'oAuth2ClientBackchannelLogoutUri' Lens
oAuth2ClientBackchannelLogoutUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientBackchannelLogoutUriL f OAuth2Client{..} = (\oAuth2ClientBackchannelLogoutUri -> OAuth2Client { oAuth2ClientBackchannelLogoutUri, ..} ) <$> f oAuth2ClientBackchannelLogoutUri
{-# INLINE oAuth2ClientBackchannelLogoutUriL #-}

-- | 'oAuth2ClientClientId' Lens
oAuth2ClientClientIdL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientClientIdL f OAuth2Client{..} = (\oAuth2ClientClientId -> OAuth2Client { oAuth2ClientClientId, ..} ) <$> f oAuth2ClientClientId
{-# INLINE oAuth2ClientClientIdL #-}

-- | 'oAuth2ClientClientName' Lens
oAuth2ClientClientNameL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientClientNameL f OAuth2Client{..} = (\oAuth2ClientClientName -> OAuth2Client { oAuth2ClientClientName, ..} ) <$> f oAuth2ClientClientName
{-# INLINE oAuth2ClientClientNameL #-}

-- | 'oAuth2ClientClientSecret' Lens
oAuth2ClientClientSecretL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientClientSecretL f OAuth2Client{..} = (\oAuth2ClientClientSecret -> OAuth2Client { oAuth2ClientClientSecret, ..} ) <$> f oAuth2ClientClientSecret
{-# INLINE oAuth2ClientClientSecretL #-}

-- | 'oAuth2ClientClientSecretExpiresAt' Lens
oAuth2ClientClientSecretExpiresAtL :: Lens_' OAuth2Client (Maybe Integer)
oAuth2ClientClientSecretExpiresAtL f OAuth2Client{..} = (\oAuth2ClientClientSecretExpiresAt -> OAuth2Client { oAuth2ClientClientSecretExpiresAt, ..} ) <$> f oAuth2ClientClientSecretExpiresAt
{-# INLINE oAuth2ClientClientSecretExpiresAtL #-}

-- | 'oAuth2ClientClientUri' Lens
oAuth2ClientClientUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientClientUriL f OAuth2Client{..} = (\oAuth2ClientClientUri -> OAuth2Client { oAuth2ClientClientUri, ..} ) <$> f oAuth2ClientClientUri
{-# INLINE oAuth2ClientClientUriL #-}

-- | 'oAuth2ClientContacts' Lens
oAuth2ClientContactsL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientContactsL f OAuth2Client{..} = (\oAuth2ClientContacts -> OAuth2Client { oAuth2ClientContacts, ..} ) <$> f oAuth2ClientContacts
{-# INLINE oAuth2ClientContactsL #-}

-- | 'oAuth2ClientCreatedAt' Lens
oAuth2ClientCreatedAtL :: Lens_' OAuth2Client (Maybe DateTime)
oAuth2ClientCreatedAtL f OAuth2Client{..} = (\oAuth2ClientCreatedAt -> OAuth2Client { oAuth2ClientCreatedAt, ..} ) <$> f oAuth2ClientCreatedAt
{-# INLINE oAuth2ClientCreatedAtL #-}

-- | 'oAuth2ClientFrontchannelLogoutSessionRequired' Lens
oAuth2ClientFrontchannelLogoutSessionRequiredL :: Lens_' OAuth2Client (Maybe Bool)
oAuth2ClientFrontchannelLogoutSessionRequiredL f OAuth2Client{..} = (\oAuth2ClientFrontchannelLogoutSessionRequired -> OAuth2Client { oAuth2ClientFrontchannelLogoutSessionRequired, ..} ) <$> f oAuth2ClientFrontchannelLogoutSessionRequired
{-# INLINE oAuth2ClientFrontchannelLogoutSessionRequiredL #-}

-- | 'oAuth2ClientFrontchannelLogoutUri' Lens
oAuth2ClientFrontchannelLogoutUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientFrontchannelLogoutUriL f OAuth2Client{..} = (\oAuth2ClientFrontchannelLogoutUri -> OAuth2Client { oAuth2ClientFrontchannelLogoutUri, ..} ) <$> f oAuth2ClientFrontchannelLogoutUri
{-# INLINE oAuth2ClientFrontchannelLogoutUriL #-}

-- | 'oAuth2ClientGrantTypes' Lens
oAuth2ClientGrantTypesL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientGrantTypesL f OAuth2Client{..} = (\oAuth2ClientGrantTypes -> OAuth2Client { oAuth2ClientGrantTypes, ..} ) <$> f oAuth2ClientGrantTypes
{-# INLINE oAuth2ClientGrantTypesL #-}

-- | 'oAuth2ClientJwks' Lens
oAuth2ClientJwksL :: Lens_' OAuth2Client (Maybe A.Value)
oAuth2ClientJwksL f OAuth2Client{..} = (\oAuth2ClientJwks -> OAuth2Client { oAuth2ClientJwks, ..} ) <$> f oAuth2ClientJwks
{-# INLINE oAuth2ClientJwksL #-}

-- | 'oAuth2ClientJwksUri' Lens
oAuth2ClientJwksUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientJwksUriL f OAuth2Client{..} = (\oAuth2ClientJwksUri -> OAuth2Client { oAuth2ClientJwksUri, ..} ) <$> f oAuth2ClientJwksUri
{-# INLINE oAuth2ClientJwksUriL #-}

-- | 'oAuth2ClientLogoUri' Lens
oAuth2ClientLogoUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientLogoUriL f OAuth2Client{..} = (\oAuth2ClientLogoUri -> OAuth2Client { oAuth2ClientLogoUri, ..} ) <$> f oAuth2ClientLogoUri
{-# INLINE oAuth2ClientLogoUriL #-}

-- | 'oAuth2ClientMetadata' Lens
oAuth2ClientMetadataL :: Lens_' OAuth2Client (Maybe A.Value)
oAuth2ClientMetadataL f OAuth2Client{..} = (\oAuth2ClientMetadata -> OAuth2Client { oAuth2ClientMetadata, ..} ) <$> f oAuth2ClientMetadata
{-# INLINE oAuth2ClientMetadataL #-}

-- | 'oAuth2ClientOwner' Lens
oAuth2ClientOwnerL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientOwnerL f OAuth2Client{..} = (\oAuth2ClientOwner -> OAuth2Client { oAuth2ClientOwner, ..} ) <$> f oAuth2ClientOwner
{-# INLINE oAuth2ClientOwnerL #-}

-- | 'oAuth2ClientPolicyUri' Lens
oAuth2ClientPolicyUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientPolicyUriL f OAuth2Client{..} = (\oAuth2ClientPolicyUri -> OAuth2Client { oAuth2ClientPolicyUri, ..} ) <$> f oAuth2ClientPolicyUri
{-# INLINE oAuth2ClientPolicyUriL #-}

-- | 'oAuth2ClientPostLogoutRedirectUris' Lens
oAuth2ClientPostLogoutRedirectUrisL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientPostLogoutRedirectUrisL f OAuth2Client{..} = (\oAuth2ClientPostLogoutRedirectUris -> OAuth2Client { oAuth2ClientPostLogoutRedirectUris, ..} ) <$> f oAuth2ClientPostLogoutRedirectUris
{-# INLINE oAuth2ClientPostLogoutRedirectUrisL #-}

-- | 'oAuth2ClientRedirectUris' Lens
oAuth2ClientRedirectUrisL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientRedirectUrisL f OAuth2Client{..} = (\oAuth2ClientRedirectUris -> OAuth2Client { oAuth2ClientRedirectUris, ..} ) <$> f oAuth2ClientRedirectUris
{-# INLINE oAuth2ClientRedirectUrisL #-}

-- | 'oAuth2ClientRequestObjectSigningAlg' Lens
oAuth2ClientRequestObjectSigningAlgL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientRequestObjectSigningAlgL f OAuth2Client{..} = (\oAuth2ClientRequestObjectSigningAlg -> OAuth2Client { oAuth2ClientRequestObjectSigningAlg, ..} ) <$> f oAuth2ClientRequestObjectSigningAlg
{-# INLINE oAuth2ClientRequestObjectSigningAlgL #-}

-- | 'oAuth2ClientRequestUris' Lens
oAuth2ClientRequestUrisL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientRequestUrisL f OAuth2Client{..} = (\oAuth2ClientRequestUris -> OAuth2Client { oAuth2ClientRequestUris, ..} ) <$> f oAuth2ClientRequestUris
{-# INLINE oAuth2ClientRequestUrisL #-}

-- | 'oAuth2ClientResponseTypes' Lens
oAuth2ClientResponseTypesL :: Lens_' OAuth2Client (Maybe [Text])
oAuth2ClientResponseTypesL f OAuth2Client{..} = (\oAuth2ClientResponseTypes -> OAuth2Client { oAuth2ClientResponseTypes, ..} ) <$> f oAuth2ClientResponseTypes
{-# INLINE oAuth2ClientResponseTypesL #-}

-- | 'oAuth2ClientScope' Lens
oAuth2ClientScopeL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientScopeL f OAuth2Client{..} = (\oAuth2ClientScope -> OAuth2Client { oAuth2ClientScope, ..} ) <$> f oAuth2ClientScope
{-# INLINE oAuth2ClientScopeL #-}

-- | 'oAuth2ClientSectorIdentifierUri' Lens
oAuth2ClientSectorIdentifierUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientSectorIdentifierUriL f OAuth2Client{..} = (\oAuth2ClientSectorIdentifierUri -> OAuth2Client { oAuth2ClientSectorIdentifierUri, ..} ) <$> f oAuth2ClientSectorIdentifierUri
{-# INLINE oAuth2ClientSectorIdentifierUriL #-}

-- | 'oAuth2ClientSubjectType' Lens
oAuth2ClientSubjectTypeL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientSubjectTypeL f OAuth2Client{..} = (\oAuth2ClientSubjectType -> OAuth2Client { oAuth2ClientSubjectType, ..} ) <$> f oAuth2ClientSubjectType
{-# INLINE oAuth2ClientSubjectTypeL #-}

-- | 'oAuth2ClientTokenEndpointAuthMethod' Lens
oAuth2ClientTokenEndpointAuthMethodL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientTokenEndpointAuthMethodL f OAuth2Client{..} = (\oAuth2ClientTokenEndpointAuthMethod -> OAuth2Client { oAuth2ClientTokenEndpointAuthMethod, ..} ) <$> f oAuth2ClientTokenEndpointAuthMethod
{-# INLINE oAuth2ClientTokenEndpointAuthMethodL #-}

-- | 'oAuth2ClientTokenEndpointAuthSigningAlg' Lens
oAuth2ClientTokenEndpointAuthSigningAlgL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientTokenEndpointAuthSigningAlgL f OAuth2Client{..} = (\oAuth2ClientTokenEndpointAuthSigningAlg -> OAuth2Client { oAuth2ClientTokenEndpointAuthSigningAlg, ..} ) <$> f oAuth2ClientTokenEndpointAuthSigningAlg
{-# INLINE oAuth2ClientTokenEndpointAuthSigningAlgL #-}

-- | 'oAuth2ClientTosUri' Lens
oAuth2ClientTosUriL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientTosUriL f OAuth2Client{..} = (\oAuth2ClientTosUri -> OAuth2Client { oAuth2ClientTosUri, ..} ) <$> f oAuth2ClientTosUri
{-# INLINE oAuth2ClientTosUriL #-}

-- | 'oAuth2ClientUpdatedAt' Lens
oAuth2ClientUpdatedAtL :: Lens_' OAuth2Client (Maybe DateTime)
oAuth2ClientUpdatedAtL f OAuth2Client{..} = (\oAuth2ClientUpdatedAt -> OAuth2Client { oAuth2ClientUpdatedAt, ..} ) <$> f oAuth2ClientUpdatedAt
{-# INLINE oAuth2ClientUpdatedAtL #-}

-- | 'oAuth2ClientUserinfoSignedResponseAlg' Lens
oAuth2ClientUserinfoSignedResponseAlgL :: Lens_' OAuth2Client (Maybe Text)
oAuth2ClientUserinfoSignedResponseAlgL f OAuth2Client{..} = (\oAuth2ClientUserinfoSignedResponseAlg -> OAuth2Client { oAuth2ClientUserinfoSignedResponseAlg, ..} ) <$> f oAuth2ClientUserinfoSignedResponseAlg
{-# INLINE oAuth2ClientUserinfoSignedResponseAlgL #-}



-- * OAuth2TokenIntrospection

-- | 'oAuth2TokenIntrospectionActive' Lens
oAuth2TokenIntrospectionActiveL :: Lens_' OAuth2TokenIntrospection (Bool)
oAuth2TokenIntrospectionActiveL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionActive -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionActive, ..} ) <$> f oAuth2TokenIntrospectionActive
{-# INLINE oAuth2TokenIntrospectionActiveL #-}

-- | 'oAuth2TokenIntrospectionAud' Lens
oAuth2TokenIntrospectionAudL :: Lens_' OAuth2TokenIntrospection (Maybe [Text])
oAuth2TokenIntrospectionAudL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionAud -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionAud, ..} ) <$> f oAuth2TokenIntrospectionAud
{-# INLINE oAuth2TokenIntrospectionAudL #-}

-- | 'oAuth2TokenIntrospectionClientId' Lens
oAuth2TokenIntrospectionClientIdL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionClientIdL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionClientId -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionClientId, ..} ) <$> f oAuth2TokenIntrospectionClientId
{-# INLINE oAuth2TokenIntrospectionClientIdL #-}

-- | 'oAuth2TokenIntrospectionExp' Lens
oAuth2TokenIntrospectionExpL :: Lens_' OAuth2TokenIntrospection (Maybe Integer)
oAuth2TokenIntrospectionExpL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionExp -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionExp, ..} ) <$> f oAuth2TokenIntrospectionExp
{-# INLINE oAuth2TokenIntrospectionExpL #-}

-- | 'oAuth2TokenIntrospectionExt' Lens
oAuth2TokenIntrospectionExtL :: Lens_' OAuth2TokenIntrospection (Maybe A.Value)
oAuth2TokenIntrospectionExtL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionExt -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionExt, ..} ) <$> f oAuth2TokenIntrospectionExt
{-# INLINE oAuth2TokenIntrospectionExtL #-}

-- | 'oAuth2TokenIntrospectionIat' Lens
oAuth2TokenIntrospectionIatL :: Lens_' OAuth2TokenIntrospection (Maybe Integer)
oAuth2TokenIntrospectionIatL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionIat -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionIat, ..} ) <$> f oAuth2TokenIntrospectionIat
{-# INLINE oAuth2TokenIntrospectionIatL #-}

-- | 'oAuth2TokenIntrospectionIss' Lens
oAuth2TokenIntrospectionIssL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionIssL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionIss -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionIss, ..} ) <$> f oAuth2TokenIntrospectionIss
{-# INLINE oAuth2TokenIntrospectionIssL #-}

-- | 'oAuth2TokenIntrospectionNbf' Lens
oAuth2TokenIntrospectionNbfL :: Lens_' OAuth2TokenIntrospection (Maybe Integer)
oAuth2TokenIntrospectionNbfL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionNbf -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionNbf, ..} ) <$> f oAuth2TokenIntrospectionNbf
{-# INLINE oAuth2TokenIntrospectionNbfL #-}

-- | 'oAuth2TokenIntrospectionObfuscatedSubject' Lens
oAuth2TokenIntrospectionObfuscatedSubjectL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionObfuscatedSubjectL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionObfuscatedSubject -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionObfuscatedSubject, ..} ) <$> f oAuth2TokenIntrospectionObfuscatedSubject
{-# INLINE oAuth2TokenIntrospectionObfuscatedSubjectL #-}

-- | 'oAuth2TokenIntrospectionScope' Lens
oAuth2TokenIntrospectionScopeL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionScopeL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionScope -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionScope, ..} ) <$> f oAuth2TokenIntrospectionScope
{-# INLINE oAuth2TokenIntrospectionScopeL #-}

-- | 'oAuth2TokenIntrospectionSub' Lens
oAuth2TokenIntrospectionSubL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionSubL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionSub -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionSub, ..} ) <$> f oAuth2TokenIntrospectionSub
{-# INLINE oAuth2TokenIntrospectionSubL #-}

-- | 'oAuth2TokenIntrospectionTokenType' Lens
oAuth2TokenIntrospectionTokenTypeL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionTokenTypeL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionTokenType -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionTokenType, ..} ) <$> f oAuth2TokenIntrospectionTokenType
{-# INLINE oAuth2TokenIntrospectionTokenTypeL #-}

-- | 'oAuth2TokenIntrospectionTokenUse' Lens
oAuth2TokenIntrospectionTokenUseL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionTokenUseL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionTokenUse -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionTokenUse, ..} ) <$> f oAuth2TokenIntrospectionTokenUse
{-# INLINE oAuth2TokenIntrospectionTokenUseL #-}

-- | 'oAuth2TokenIntrospectionUsername' Lens
oAuth2TokenIntrospectionUsernameL :: Lens_' OAuth2TokenIntrospection (Maybe Text)
oAuth2TokenIntrospectionUsernameL f OAuth2TokenIntrospection{..} = (\oAuth2TokenIntrospectionUsername -> OAuth2TokenIntrospection { oAuth2TokenIntrospectionUsername, ..} ) <$> f oAuth2TokenIntrospectionUsername
{-# INLINE oAuth2TokenIntrospectionUsernameL #-}



-- * Oauth2TokenResponse

-- | 'oauth2TokenResponseAccessToken' Lens
oauth2TokenResponseAccessTokenL :: Lens_' Oauth2TokenResponse (Maybe Text)
oauth2TokenResponseAccessTokenL f Oauth2TokenResponse{..} = (\oauth2TokenResponseAccessToken -> Oauth2TokenResponse { oauth2TokenResponseAccessToken, ..} ) <$> f oauth2TokenResponseAccessToken
{-# INLINE oauth2TokenResponseAccessTokenL #-}

-- | 'oauth2TokenResponseExpiresIn' Lens
oauth2TokenResponseExpiresInL :: Lens_' Oauth2TokenResponse (Maybe Integer)
oauth2TokenResponseExpiresInL f Oauth2TokenResponse{..} = (\oauth2TokenResponseExpiresIn -> Oauth2TokenResponse { oauth2TokenResponseExpiresIn, ..} ) <$> f oauth2TokenResponseExpiresIn
{-# INLINE oauth2TokenResponseExpiresInL #-}

-- | 'oauth2TokenResponseIdToken' Lens
oauth2TokenResponseIdTokenL :: Lens_' Oauth2TokenResponse (Maybe Text)
oauth2TokenResponseIdTokenL f Oauth2TokenResponse{..} = (\oauth2TokenResponseIdToken -> Oauth2TokenResponse { oauth2TokenResponseIdToken, ..} ) <$> f oauth2TokenResponseIdToken
{-# INLINE oauth2TokenResponseIdTokenL #-}

-- | 'oauth2TokenResponseRefreshToken' Lens
oauth2TokenResponseRefreshTokenL :: Lens_' Oauth2TokenResponse (Maybe Text)
oauth2TokenResponseRefreshTokenL f Oauth2TokenResponse{..} = (\oauth2TokenResponseRefreshToken -> Oauth2TokenResponse { oauth2TokenResponseRefreshToken, ..} ) <$> f oauth2TokenResponseRefreshToken
{-# INLINE oauth2TokenResponseRefreshTokenL #-}

-- | 'oauth2TokenResponseScope' Lens
oauth2TokenResponseScopeL :: Lens_' Oauth2TokenResponse (Maybe Text)
oauth2TokenResponseScopeL f Oauth2TokenResponse{..} = (\oauth2TokenResponseScope -> Oauth2TokenResponse { oauth2TokenResponseScope, ..} ) <$> f oauth2TokenResponseScope
{-# INLINE oauth2TokenResponseScopeL #-}

-- | 'oauth2TokenResponseTokenType' Lens
oauth2TokenResponseTokenTypeL :: Lens_' Oauth2TokenResponse (Maybe Text)
oauth2TokenResponseTokenTypeL f Oauth2TokenResponse{..} = (\oauth2TokenResponseTokenType -> Oauth2TokenResponse { oauth2TokenResponseTokenType, ..} ) <$> f oauth2TokenResponseTokenType
{-# INLINE oauth2TokenResponseTokenTypeL #-}



-- * OpenIDConnectContext

-- | 'openIDConnectContextAcrValues' Lens
openIDConnectContextAcrValuesL :: Lens_' OpenIDConnectContext (Maybe [Text])
openIDConnectContextAcrValuesL f OpenIDConnectContext{..} = (\openIDConnectContextAcrValues -> OpenIDConnectContext { openIDConnectContextAcrValues, ..} ) <$> f openIDConnectContextAcrValues
{-# INLINE openIDConnectContextAcrValuesL #-}

-- | 'openIDConnectContextDisplay' Lens
openIDConnectContextDisplayL :: Lens_' OpenIDConnectContext (Maybe Text)
openIDConnectContextDisplayL f OpenIDConnectContext{..} = (\openIDConnectContextDisplay -> OpenIDConnectContext { openIDConnectContextDisplay, ..} ) <$> f openIDConnectContextDisplay
{-# INLINE openIDConnectContextDisplayL #-}

-- | 'openIDConnectContextIdTokenHintClaims' Lens
openIDConnectContextIdTokenHintClaimsL :: Lens_' OpenIDConnectContext (Maybe A.Value)
openIDConnectContextIdTokenHintClaimsL f OpenIDConnectContext{..} = (\openIDConnectContextIdTokenHintClaims -> OpenIDConnectContext { openIDConnectContextIdTokenHintClaims, ..} ) <$> f openIDConnectContextIdTokenHintClaims
{-# INLINE openIDConnectContextIdTokenHintClaimsL #-}

-- | 'openIDConnectContextLoginHint' Lens
openIDConnectContextLoginHintL :: Lens_' OpenIDConnectContext (Maybe Text)
openIDConnectContextLoginHintL f OpenIDConnectContext{..} = (\openIDConnectContextLoginHint -> OpenIDConnectContext { openIDConnectContextLoginHint, ..} ) <$> f openIDConnectContextLoginHint
{-# INLINE openIDConnectContextLoginHintL #-}

-- | 'openIDConnectContextUiLocales' Lens
openIDConnectContextUiLocalesL :: Lens_' OpenIDConnectContext (Maybe [Text])
openIDConnectContextUiLocalesL f OpenIDConnectContext{..} = (\openIDConnectContextUiLocales -> OpenIDConnectContext { openIDConnectContextUiLocales, ..} ) <$> f openIDConnectContextUiLocales
{-# INLINE openIDConnectContextUiLocalesL #-}



-- * PluginConfig

-- | 'pluginConfigArgs' Lens
pluginConfigArgsL :: Lens_' PluginConfig (PluginConfigArgs)
pluginConfigArgsL f PluginConfig{..} = (\pluginConfigArgs -> PluginConfig { pluginConfigArgs, ..} ) <$> f pluginConfigArgs
{-# INLINE pluginConfigArgsL #-}

-- | 'pluginConfigDescription' Lens
pluginConfigDescriptionL :: Lens_' PluginConfig (Text)
pluginConfigDescriptionL f PluginConfig{..} = (\pluginConfigDescription -> PluginConfig { pluginConfigDescription, ..} ) <$> f pluginConfigDescription
{-# INLINE pluginConfigDescriptionL #-}

-- | 'pluginConfigDockerVersion' Lens
pluginConfigDockerVersionL :: Lens_' PluginConfig (Maybe Text)
pluginConfigDockerVersionL f PluginConfig{..} = (\pluginConfigDockerVersion -> PluginConfig { pluginConfigDockerVersion, ..} ) <$> f pluginConfigDockerVersion
{-# INLINE pluginConfigDockerVersionL #-}

-- | 'pluginConfigDocumentation' Lens
pluginConfigDocumentationL :: Lens_' PluginConfig (Text)
pluginConfigDocumentationL f PluginConfig{..} = (\pluginConfigDocumentation -> PluginConfig { pluginConfigDocumentation, ..} ) <$> f pluginConfigDocumentation
{-# INLINE pluginConfigDocumentationL #-}

-- | 'pluginConfigEntrypoint' Lens
pluginConfigEntrypointL :: Lens_' PluginConfig ([Text])
pluginConfigEntrypointL f PluginConfig{..} = (\pluginConfigEntrypoint -> PluginConfig { pluginConfigEntrypoint, ..} ) <$> f pluginConfigEntrypoint
{-# INLINE pluginConfigEntrypointL #-}

-- | 'pluginConfigEnv' Lens
pluginConfigEnvL :: Lens_' PluginConfig ([PluginEnv])
pluginConfigEnvL f PluginConfig{..} = (\pluginConfigEnv -> PluginConfig { pluginConfigEnv, ..} ) <$> f pluginConfigEnv
{-# INLINE pluginConfigEnvL #-}

-- | 'pluginConfigInterface' Lens
pluginConfigInterfaceL :: Lens_' PluginConfig (PluginConfigInterface)
pluginConfigInterfaceL f PluginConfig{..} = (\pluginConfigInterface -> PluginConfig { pluginConfigInterface, ..} ) <$> f pluginConfigInterface
{-# INLINE pluginConfigInterfaceL #-}

-- | 'pluginConfigIpcHost' Lens
pluginConfigIpcHostL :: Lens_' PluginConfig (Bool)
pluginConfigIpcHostL f PluginConfig{..} = (\pluginConfigIpcHost -> PluginConfig { pluginConfigIpcHost, ..} ) <$> f pluginConfigIpcHost
{-# INLINE pluginConfigIpcHostL #-}

-- | 'pluginConfigLinux' Lens
pluginConfigLinuxL :: Lens_' PluginConfig (PluginConfigLinux)
pluginConfigLinuxL f PluginConfig{..} = (\pluginConfigLinux -> PluginConfig { pluginConfigLinux, ..} ) <$> f pluginConfigLinux
{-# INLINE pluginConfigLinuxL #-}

-- | 'pluginConfigMounts' Lens
pluginConfigMountsL :: Lens_' PluginConfig ([PluginMount])
pluginConfigMountsL f PluginConfig{..} = (\pluginConfigMounts -> PluginConfig { pluginConfigMounts, ..} ) <$> f pluginConfigMounts
{-# INLINE pluginConfigMountsL #-}

-- | 'pluginConfigNetwork' Lens
pluginConfigNetworkL :: Lens_' PluginConfig (PluginConfigNetwork)
pluginConfigNetworkL f PluginConfig{..} = (\pluginConfigNetwork -> PluginConfig { pluginConfigNetwork, ..} ) <$> f pluginConfigNetwork
{-# INLINE pluginConfigNetworkL #-}

-- | 'pluginConfigPidHost' Lens
pluginConfigPidHostL :: Lens_' PluginConfig (Bool)
pluginConfigPidHostL f PluginConfig{..} = (\pluginConfigPidHost -> PluginConfig { pluginConfigPidHost, ..} ) <$> f pluginConfigPidHost
{-# INLINE pluginConfigPidHostL #-}

-- | 'pluginConfigPropagatedMount' Lens
pluginConfigPropagatedMountL :: Lens_' PluginConfig (Text)
pluginConfigPropagatedMountL f PluginConfig{..} = (\pluginConfigPropagatedMount -> PluginConfig { pluginConfigPropagatedMount, ..} ) <$> f pluginConfigPropagatedMount
{-# INLINE pluginConfigPropagatedMountL #-}

-- | 'pluginConfigUser' Lens
pluginConfigUserL :: Lens_' PluginConfig (Maybe PluginConfigUser)
pluginConfigUserL f PluginConfig{..} = (\pluginConfigUser -> PluginConfig { pluginConfigUser, ..} ) <$> f pluginConfigUser
{-# INLINE pluginConfigUserL #-}

-- | 'pluginConfigWorkDir' Lens
pluginConfigWorkDirL :: Lens_' PluginConfig (Text)
pluginConfigWorkDirL f PluginConfig{..} = (\pluginConfigWorkDir -> PluginConfig { pluginConfigWorkDir, ..} ) <$> f pluginConfigWorkDir
{-# INLINE pluginConfigWorkDirL #-}

-- | 'pluginConfigRootfs' Lens
pluginConfigRootfsL :: Lens_' PluginConfig (Maybe PluginConfigRootfs)
pluginConfigRootfsL f PluginConfig{..} = (\pluginConfigRootfs -> PluginConfig { pluginConfigRootfs, ..} ) <$> f pluginConfigRootfs
{-# INLINE pluginConfigRootfsL #-}



-- * PluginConfigArgs

-- | 'pluginConfigArgsDescription' Lens
pluginConfigArgsDescriptionL :: Lens_' PluginConfigArgs (Text)
pluginConfigArgsDescriptionL f PluginConfigArgs{..} = (\pluginConfigArgsDescription -> PluginConfigArgs { pluginConfigArgsDescription, ..} ) <$> f pluginConfigArgsDescription
{-# INLINE pluginConfigArgsDescriptionL #-}

-- | 'pluginConfigArgsName' Lens
pluginConfigArgsNameL :: Lens_' PluginConfigArgs (Text)
pluginConfigArgsNameL f PluginConfigArgs{..} = (\pluginConfigArgsName -> PluginConfigArgs { pluginConfigArgsName, ..} ) <$> f pluginConfigArgsName
{-# INLINE pluginConfigArgsNameL #-}

-- | 'pluginConfigArgsSettable' Lens
pluginConfigArgsSettableL :: Lens_' PluginConfigArgs ([Text])
pluginConfigArgsSettableL f PluginConfigArgs{..} = (\pluginConfigArgsSettable -> PluginConfigArgs { pluginConfigArgsSettable, ..} ) <$> f pluginConfigArgsSettable
{-# INLINE pluginConfigArgsSettableL #-}

-- | 'pluginConfigArgsValue' Lens
pluginConfigArgsValueL :: Lens_' PluginConfigArgs ([Text])
pluginConfigArgsValueL f PluginConfigArgs{..} = (\pluginConfigArgsValue -> PluginConfigArgs { pluginConfigArgsValue, ..} ) <$> f pluginConfigArgsValue
{-# INLINE pluginConfigArgsValueL #-}



-- * PluginConfigInterface

-- | 'pluginConfigInterfaceProtocolScheme' Lens
pluginConfigInterfaceProtocolSchemeL :: Lens_' PluginConfigInterface (Maybe Text)
pluginConfigInterfaceProtocolSchemeL f PluginConfigInterface{..} = (\pluginConfigInterfaceProtocolScheme -> PluginConfigInterface { pluginConfigInterfaceProtocolScheme, ..} ) <$> f pluginConfigInterfaceProtocolScheme
{-# INLINE pluginConfigInterfaceProtocolSchemeL #-}

-- | 'pluginConfigInterfaceSocket' Lens
pluginConfigInterfaceSocketL :: Lens_' PluginConfigInterface (Text)
pluginConfigInterfaceSocketL f PluginConfigInterface{..} = (\pluginConfigInterfaceSocket -> PluginConfigInterface { pluginConfigInterfaceSocket, ..} ) <$> f pluginConfigInterfaceSocket
{-# INLINE pluginConfigInterfaceSocketL #-}

-- | 'pluginConfigInterfaceTypes' Lens
pluginConfigInterfaceTypesL :: Lens_' PluginConfigInterface ([PluginInterfaceType])
pluginConfigInterfaceTypesL f PluginConfigInterface{..} = (\pluginConfigInterfaceTypes -> PluginConfigInterface { pluginConfigInterfaceTypes, ..} ) <$> f pluginConfigInterfaceTypes
{-# INLINE pluginConfigInterfaceTypesL #-}



-- * PluginConfigLinux

-- | 'pluginConfigLinuxAllowAllDevices' Lens
pluginConfigLinuxAllowAllDevicesL :: Lens_' PluginConfigLinux (Bool)
pluginConfigLinuxAllowAllDevicesL f PluginConfigLinux{..} = (\pluginConfigLinuxAllowAllDevices -> PluginConfigLinux { pluginConfigLinuxAllowAllDevices, ..} ) <$> f pluginConfigLinuxAllowAllDevices
{-# INLINE pluginConfigLinuxAllowAllDevicesL #-}

-- | 'pluginConfigLinuxCapabilities' Lens
pluginConfigLinuxCapabilitiesL :: Lens_' PluginConfigLinux ([Text])
pluginConfigLinuxCapabilitiesL f PluginConfigLinux{..} = (\pluginConfigLinuxCapabilities -> PluginConfigLinux { pluginConfigLinuxCapabilities, ..} ) <$> f pluginConfigLinuxCapabilities
{-# INLINE pluginConfigLinuxCapabilitiesL #-}

-- | 'pluginConfigLinuxDevices' Lens
pluginConfigLinuxDevicesL :: Lens_' PluginConfigLinux ([PluginDevice])
pluginConfigLinuxDevicesL f PluginConfigLinux{..} = (\pluginConfigLinuxDevices -> PluginConfigLinux { pluginConfigLinuxDevices, ..} ) <$> f pluginConfigLinuxDevices
{-# INLINE pluginConfigLinuxDevicesL #-}



-- * PluginConfigNetwork

-- | 'pluginConfigNetworkType' Lens
pluginConfigNetworkTypeL :: Lens_' PluginConfigNetwork (Text)
pluginConfigNetworkTypeL f PluginConfigNetwork{..} = (\pluginConfigNetworkType -> PluginConfigNetwork { pluginConfigNetworkType, ..} ) <$> f pluginConfigNetworkType
{-# INLINE pluginConfigNetworkTypeL #-}



-- * PluginConfigRootfs

-- | 'pluginConfigRootfsDiffIds' Lens
pluginConfigRootfsDiffIdsL :: Lens_' PluginConfigRootfs (Maybe [Text])
pluginConfigRootfsDiffIdsL f PluginConfigRootfs{..} = (\pluginConfigRootfsDiffIds -> PluginConfigRootfs { pluginConfigRootfsDiffIds, ..} ) <$> f pluginConfigRootfsDiffIds
{-# INLINE pluginConfigRootfsDiffIdsL #-}

-- | 'pluginConfigRootfsType' Lens
pluginConfigRootfsTypeL :: Lens_' PluginConfigRootfs (Maybe Text)
pluginConfigRootfsTypeL f PluginConfigRootfs{..} = (\pluginConfigRootfsType -> PluginConfigRootfs { pluginConfigRootfsType, ..} ) <$> f pluginConfigRootfsType
{-# INLINE pluginConfigRootfsTypeL #-}



-- * PluginConfigUser

-- | 'pluginConfigUserGid' Lens
pluginConfigUserGidL :: Lens_' PluginConfigUser (Maybe Int)
pluginConfigUserGidL f PluginConfigUser{..} = (\pluginConfigUserGid -> PluginConfigUser { pluginConfigUserGid, ..} ) <$> f pluginConfigUserGid
{-# INLINE pluginConfigUserGidL #-}

-- | 'pluginConfigUserUid' Lens
pluginConfigUserUidL :: Lens_' PluginConfigUser (Maybe Int)
pluginConfigUserUidL f PluginConfigUser{..} = (\pluginConfigUserUid -> PluginConfigUser { pluginConfigUserUid, ..} ) <$> f pluginConfigUserUid
{-# INLINE pluginConfigUserUidL #-}



-- * PluginDevice

-- | 'pluginDeviceDescription' Lens
pluginDeviceDescriptionL :: Lens_' PluginDevice (Text)
pluginDeviceDescriptionL f PluginDevice{..} = (\pluginDeviceDescription -> PluginDevice { pluginDeviceDescription, ..} ) <$> f pluginDeviceDescription
{-# INLINE pluginDeviceDescriptionL #-}

-- | 'pluginDeviceName' Lens
pluginDeviceNameL :: Lens_' PluginDevice (Text)
pluginDeviceNameL f PluginDevice{..} = (\pluginDeviceName -> PluginDevice { pluginDeviceName, ..} ) <$> f pluginDeviceName
{-# INLINE pluginDeviceNameL #-}

-- | 'pluginDevicePath' Lens
pluginDevicePathL :: Lens_' PluginDevice (Text)
pluginDevicePathL f PluginDevice{..} = (\pluginDevicePath -> PluginDevice { pluginDevicePath, ..} ) <$> f pluginDevicePath
{-# INLINE pluginDevicePathL #-}

-- | 'pluginDeviceSettable' Lens
pluginDeviceSettableL :: Lens_' PluginDevice ([Text])
pluginDeviceSettableL f PluginDevice{..} = (\pluginDeviceSettable -> PluginDevice { pluginDeviceSettable, ..} ) <$> f pluginDeviceSettable
{-# INLINE pluginDeviceSettableL #-}



-- * PluginEnv

-- | 'pluginEnvDescription' Lens
pluginEnvDescriptionL :: Lens_' PluginEnv (Text)
pluginEnvDescriptionL f PluginEnv{..} = (\pluginEnvDescription -> PluginEnv { pluginEnvDescription, ..} ) <$> f pluginEnvDescription
{-# INLINE pluginEnvDescriptionL #-}

-- | 'pluginEnvName' Lens
pluginEnvNameL :: Lens_' PluginEnv (Text)
pluginEnvNameL f PluginEnv{..} = (\pluginEnvName -> PluginEnv { pluginEnvName, ..} ) <$> f pluginEnvName
{-# INLINE pluginEnvNameL #-}

-- | 'pluginEnvSettable' Lens
pluginEnvSettableL :: Lens_' PluginEnv ([Text])
pluginEnvSettableL f PluginEnv{..} = (\pluginEnvSettable -> PluginEnv { pluginEnvSettable, ..} ) <$> f pluginEnvSettable
{-# INLINE pluginEnvSettableL #-}

-- | 'pluginEnvValue' Lens
pluginEnvValueL :: Lens_' PluginEnv (Text)
pluginEnvValueL f PluginEnv{..} = (\pluginEnvValue -> PluginEnv { pluginEnvValue, ..} ) <$> f pluginEnvValue
{-# INLINE pluginEnvValueL #-}



-- * PluginInterfaceType

-- | 'pluginInterfaceTypeCapability' Lens
pluginInterfaceTypeCapabilityL :: Lens_' PluginInterfaceType (Text)
pluginInterfaceTypeCapabilityL f PluginInterfaceType{..} = (\pluginInterfaceTypeCapability -> PluginInterfaceType { pluginInterfaceTypeCapability, ..} ) <$> f pluginInterfaceTypeCapability
{-# INLINE pluginInterfaceTypeCapabilityL #-}

-- | 'pluginInterfaceTypePrefix' Lens
pluginInterfaceTypePrefixL :: Lens_' PluginInterfaceType (Text)
pluginInterfaceTypePrefixL f PluginInterfaceType{..} = (\pluginInterfaceTypePrefix -> PluginInterfaceType { pluginInterfaceTypePrefix, ..} ) <$> f pluginInterfaceTypePrefix
{-# INLINE pluginInterfaceTypePrefixL #-}

-- | 'pluginInterfaceTypeVersion' Lens
pluginInterfaceTypeVersionL :: Lens_' PluginInterfaceType (Text)
pluginInterfaceTypeVersionL f PluginInterfaceType{..} = (\pluginInterfaceTypeVersion -> PluginInterfaceType { pluginInterfaceTypeVersion, ..} ) <$> f pluginInterfaceTypeVersion
{-# INLINE pluginInterfaceTypeVersionL #-}



-- * PluginMount

-- | 'pluginMountDescription' Lens
pluginMountDescriptionL :: Lens_' PluginMount (Text)
pluginMountDescriptionL f PluginMount{..} = (\pluginMountDescription -> PluginMount { pluginMountDescription, ..} ) <$> f pluginMountDescription
{-# INLINE pluginMountDescriptionL #-}

-- | 'pluginMountDestination' Lens
pluginMountDestinationL :: Lens_' PluginMount (Text)
pluginMountDestinationL f PluginMount{..} = (\pluginMountDestination -> PluginMount { pluginMountDestination, ..} ) <$> f pluginMountDestination
{-# INLINE pluginMountDestinationL #-}

-- | 'pluginMountName' Lens
pluginMountNameL :: Lens_' PluginMount (Text)
pluginMountNameL f PluginMount{..} = (\pluginMountName -> PluginMount { pluginMountName, ..} ) <$> f pluginMountName
{-# INLINE pluginMountNameL #-}

-- | 'pluginMountOptions' Lens
pluginMountOptionsL :: Lens_' PluginMount ([Text])
pluginMountOptionsL f PluginMount{..} = (\pluginMountOptions -> PluginMount { pluginMountOptions, ..} ) <$> f pluginMountOptions
{-# INLINE pluginMountOptionsL #-}

-- | 'pluginMountSettable' Lens
pluginMountSettableL :: Lens_' PluginMount ([Text])
pluginMountSettableL f PluginMount{..} = (\pluginMountSettable -> PluginMount { pluginMountSettable, ..} ) <$> f pluginMountSettable
{-# INLINE pluginMountSettableL #-}

-- | 'pluginMountSource' Lens
pluginMountSourceL :: Lens_' PluginMount (Text)
pluginMountSourceL f PluginMount{..} = (\pluginMountSource -> PluginMount { pluginMountSource, ..} ) <$> f pluginMountSource
{-# INLINE pluginMountSourceL #-}

-- | 'pluginMountType' Lens
pluginMountTypeL :: Lens_' PluginMount (Text)
pluginMountTypeL f PluginMount{..} = (\pluginMountType -> PluginMount { pluginMountType, ..} ) <$> f pluginMountType
{-# INLINE pluginMountTypeL #-}



-- * PluginSettings

-- | 'pluginSettingsArgs' Lens
pluginSettingsArgsL :: Lens_' PluginSettings ([Text])
pluginSettingsArgsL f PluginSettings{..} = (\pluginSettingsArgs -> PluginSettings { pluginSettingsArgs, ..} ) <$> f pluginSettingsArgs
{-# INLINE pluginSettingsArgsL #-}

-- | 'pluginSettingsDevices' Lens
pluginSettingsDevicesL :: Lens_' PluginSettings ([PluginDevice])
pluginSettingsDevicesL f PluginSettings{..} = (\pluginSettingsDevices -> PluginSettings { pluginSettingsDevices, ..} ) <$> f pluginSettingsDevices
{-# INLINE pluginSettingsDevicesL #-}

-- | 'pluginSettingsEnv' Lens
pluginSettingsEnvL :: Lens_' PluginSettings ([Text])
pluginSettingsEnvL f PluginSettings{..} = (\pluginSettingsEnv -> PluginSettings { pluginSettingsEnv, ..} ) <$> f pluginSettingsEnv
{-# INLINE pluginSettingsEnvL #-}

-- | 'pluginSettingsMounts' Lens
pluginSettingsMountsL :: Lens_' PluginSettings ([PluginMount])
pluginSettingsMountsL f PluginSettings{..} = (\pluginSettingsMounts -> PluginSettings { pluginSettingsMounts, ..} ) <$> f pluginSettingsMounts
{-# INLINE pluginSettingsMountsL #-}



-- * PreviousConsentSession

-- | 'previousConsentSessionConsentRequest' Lens
previousConsentSessionConsentRequestL :: Lens_' PreviousConsentSession (Maybe ConsentRequest)
previousConsentSessionConsentRequestL f PreviousConsentSession{..} = (\previousConsentSessionConsentRequest -> PreviousConsentSession { previousConsentSessionConsentRequest, ..} ) <$> f previousConsentSessionConsentRequest
{-# INLINE previousConsentSessionConsentRequestL #-}

-- | 'previousConsentSessionGrantAccessTokenAudience' Lens
previousConsentSessionGrantAccessTokenAudienceL :: Lens_' PreviousConsentSession (Maybe [Text])
previousConsentSessionGrantAccessTokenAudienceL f PreviousConsentSession{..} = (\previousConsentSessionGrantAccessTokenAudience -> PreviousConsentSession { previousConsentSessionGrantAccessTokenAudience, ..} ) <$> f previousConsentSessionGrantAccessTokenAudience
{-# INLINE previousConsentSessionGrantAccessTokenAudienceL #-}

-- | 'previousConsentSessionGrantScope' Lens
previousConsentSessionGrantScopeL :: Lens_' PreviousConsentSession (Maybe [Text])
previousConsentSessionGrantScopeL f PreviousConsentSession{..} = (\previousConsentSessionGrantScope -> PreviousConsentSession { previousConsentSessionGrantScope, ..} ) <$> f previousConsentSessionGrantScope
{-# INLINE previousConsentSessionGrantScopeL #-}

-- | 'previousConsentSessionHandledAt' Lens
previousConsentSessionHandledAtL :: Lens_' PreviousConsentSession (Maybe DateTime)
previousConsentSessionHandledAtL f PreviousConsentSession{..} = (\previousConsentSessionHandledAt -> PreviousConsentSession { previousConsentSessionHandledAt, ..} ) <$> f previousConsentSessionHandledAt
{-# INLINE previousConsentSessionHandledAtL #-}

-- | 'previousConsentSessionRemember' Lens
previousConsentSessionRememberL :: Lens_' PreviousConsentSession (Maybe Bool)
previousConsentSessionRememberL f PreviousConsentSession{..} = (\previousConsentSessionRemember -> PreviousConsentSession { previousConsentSessionRemember, ..} ) <$> f previousConsentSessionRemember
{-# INLINE previousConsentSessionRememberL #-}

-- | 'previousConsentSessionRememberFor' Lens
previousConsentSessionRememberForL :: Lens_' PreviousConsentSession (Maybe Integer)
previousConsentSessionRememberForL f PreviousConsentSession{..} = (\previousConsentSessionRememberFor -> PreviousConsentSession { previousConsentSessionRememberFor, ..} ) <$> f previousConsentSessionRememberFor
{-# INLINE previousConsentSessionRememberForL #-}

-- | 'previousConsentSessionSession' Lens
previousConsentSessionSessionL :: Lens_' PreviousConsentSession (Maybe ConsentRequestSession)
previousConsentSessionSessionL f PreviousConsentSession{..} = (\previousConsentSessionSession -> PreviousConsentSession { previousConsentSessionSession, ..} ) <$> f previousConsentSessionSession
{-# INLINE previousConsentSessionSessionL #-}



-- * RejectRequest

-- | 'rejectRequestError' Lens
rejectRequestErrorL :: Lens_' RejectRequest (Maybe Text)
rejectRequestErrorL f RejectRequest{..} = (\rejectRequestError -> RejectRequest { rejectRequestError, ..} ) <$> f rejectRequestError
{-# INLINE rejectRequestErrorL #-}

-- | 'rejectRequestErrorDebug' Lens
rejectRequestErrorDebugL :: Lens_' RejectRequest (Maybe Text)
rejectRequestErrorDebugL f RejectRequest{..} = (\rejectRequestErrorDebug -> RejectRequest { rejectRequestErrorDebug, ..} ) <$> f rejectRequestErrorDebug
{-# INLINE rejectRequestErrorDebugL #-}

-- | 'rejectRequestErrorDescription' Lens
rejectRequestErrorDescriptionL :: Lens_' RejectRequest (Maybe Text)
rejectRequestErrorDescriptionL f RejectRequest{..} = (\rejectRequestErrorDescription -> RejectRequest { rejectRequestErrorDescription, ..} ) <$> f rejectRequestErrorDescription
{-# INLINE rejectRequestErrorDescriptionL #-}

-- | 'rejectRequestErrorHint' Lens
rejectRequestErrorHintL :: Lens_' RejectRequest (Maybe Text)
rejectRequestErrorHintL f RejectRequest{..} = (\rejectRequestErrorHint -> RejectRequest { rejectRequestErrorHint, ..} ) <$> f rejectRequestErrorHint
{-# INLINE rejectRequestErrorHintL #-}

-- | 'rejectRequestStatusCode' Lens
rejectRequestStatusCodeL :: Lens_' RejectRequest (Maybe Integer)
rejectRequestStatusCodeL f RejectRequest{..} = (\rejectRequestStatusCode -> RejectRequest { rejectRequestStatusCode, ..} ) <$> f rejectRequestStatusCode
{-# INLINE rejectRequestStatusCodeL #-}



-- * UserinfoResponse

-- | 'userinfoResponseBirthdate' Lens
userinfoResponseBirthdateL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseBirthdateL f UserinfoResponse{..} = (\userinfoResponseBirthdate -> UserinfoResponse { userinfoResponseBirthdate, ..} ) <$> f userinfoResponseBirthdate
{-# INLINE userinfoResponseBirthdateL #-}

-- | 'userinfoResponseEmail' Lens
userinfoResponseEmailL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseEmailL f UserinfoResponse{..} = (\userinfoResponseEmail -> UserinfoResponse { userinfoResponseEmail, ..} ) <$> f userinfoResponseEmail
{-# INLINE userinfoResponseEmailL #-}

-- | 'userinfoResponseEmailVerified' Lens
userinfoResponseEmailVerifiedL :: Lens_' UserinfoResponse (Maybe Bool)
userinfoResponseEmailVerifiedL f UserinfoResponse{..} = (\userinfoResponseEmailVerified -> UserinfoResponse { userinfoResponseEmailVerified, ..} ) <$> f userinfoResponseEmailVerified
{-# INLINE userinfoResponseEmailVerifiedL #-}

-- | 'userinfoResponseFamilyName' Lens
userinfoResponseFamilyNameL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseFamilyNameL f UserinfoResponse{..} = (\userinfoResponseFamilyName -> UserinfoResponse { userinfoResponseFamilyName, ..} ) <$> f userinfoResponseFamilyName
{-# INLINE userinfoResponseFamilyNameL #-}

-- | 'userinfoResponseGender' Lens
userinfoResponseGenderL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseGenderL f UserinfoResponse{..} = (\userinfoResponseGender -> UserinfoResponse { userinfoResponseGender, ..} ) <$> f userinfoResponseGender
{-# INLINE userinfoResponseGenderL #-}

-- | 'userinfoResponseGivenName' Lens
userinfoResponseGivenNameL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseGivenNameL f UserinfoResponse{..} = (\userinfoResponseGivenName -> UserinfoResponse { userinfoResponseGivenName, ..} ) <$> f userinfoResponseGivenName
{-# INLINE userinfoResponseGivenNameL #-}

-- | 'userinfoResponseLocale' Lens
userinfoResponseLocaleL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseLocaleL f UserinfoResponse{..} = (\userinfoResponseLocale -> UserinfoResponse { userinfoResponseLocale, ..} ) <$> f userinfoResponseLocale
{-# INLINE userinfoResponseLocaleL #-}

-- | 'userinfoResponseMiddleName' Lens
userinfoResponseMiddleNameL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseMiddleNameL f UserinfoResponse{..} = (\userinfoResponseMiddleName -> UserinfoResponse { userinfoResponseMiddleName, ..} ) <$> f userinfoResponseMiddleName
{-# INLINE userinfoResponseMiddleNameL #-}

-- | 'userinfoResponseName' Lens
userinfoResponseNameL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseNameL f UserinfoResponse{..} = (\userinfoResponseName -> UserinfoResponse { userinfoResponseName, ..} ) <$> f userinfoResponseName
{-# INLINE userinfoResponseNameL #-}

-- | 'userinfoResponseNickname' Lens
userinfoResponseNicknameL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseNicknameL f UserinfoResponse{..} = (\userinfoResponseNickname -> UserinfoResponse { userinfoResponseNickname, ..} ) <$> f userinfoResponseNickname
{-# INLINE userinfoResponseNicknameL #-}

-- | 'userinfoResponsePhoneNumber' Lens
userinfoResponsePhoneNumberL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponsePhoneNumberL f UserinfoResponse{..} = (\userinfoResponsePhoneNumber -> UserinfoResponse { userinfoResponsePhoneNumber, ..} ) <$> f userinfoResponsePhoneNumber
{-# INLINE userinfoResponsePhoneNumberL #-}

-- | 'userinfoResponsePhoneNumberVerified' Lens
userinfoResponsePhoneNumberVerifiedL :: Lens_' UserinfoResponse (Maybe Bool)
userinfoResponsePhoneNumberVerifiedL f UserinfoResponse{..} = (\userinfoResponsePhoneNumberVerified -> UserinfoResponse { userinfoResponsePhoneNumberVerified, ..} ) <$> f userinfoResponsePhoneNumberVerified
{-# INLINE userinfoResponsePhoneNumberVerifiedL #-}

-- | 'userinfoResponsePicture' Lens
userinfoResponsePictureL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponsePictureL f UserinfoResponse{..} = (\userinfoResponsePicture -> UserinfoResponse { userinfoResponsePicture, ..} ) <$> f userinfoResponsePicture
{-# INLINE userinfoResponsePictureL #-}

-- | 'userinfoResponsePreferredUsername' Lens
userinfoResponsePreferredUsernameL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponsePreferredUsernameL f UserinfoResponse{..} = (\userinfoResponsePreferredUsername -> UserinfoResponse { userinfoResponsePreferredUsername, ..} ) <$> f userinfoResponsePreferredUsername
{-# INLINE userinfoResponsePreferredUsernameL #-}

-- | 'userinfoResponseProfile' Lens
userinfoResponseProfileL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseProfileL f UserinfoResponse{..} = (\userinfoResponseProfile -> UserinfoResponse { userinfoResponseProfile, ..} ) <$> f userinfoResponseProfile
{-# INLINE userinfoResponseProfileL #-}

-- | 'userinfoResponseSub' Lens
userinfoResponseSubL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseSubL f UserinfoResponse{..} = (\userinfoResponseSub -> UserinfoResponse { userinfoResponseSub, ..} ) <$> f userinfoResponseSub
{-# INLINE userinfoResponseSubL #-}

-- | 'userinfoResponseUpdatedAt' Lens
userinfoResponseUpdatedAtL :: Lens_' UserinfoResponse (Maybe Integer)
userinfoResponseUpdatedAtL f UserinfoResponse{..} = (\userinfoResponseUpdatedAt -> UserinfoResponse { userinfoResponseUpdatedAt, ..} ) <$> f userinfoResponseUpdatedAt
{-# INLINE userinfoResponseUpdatedAtL #-}

-- | 'userinfoResponseWebsite' Lens
userinfoResponseWebsiteL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseWebsiteL f UserinfoResponse{..} = (\userinfoResponseWebsite -> UserinfoResponse { userinfoResponseWebsite, ..} ) <$> f userinfoResponseWebsite
{-# INLINE userinfoResponseWebsiteL #-}

-- | 'userinfoResponseZoneinfo' Lens
userinfoResponseZoneinfoL :: Lens_' UserinfoResponse (Maybe Text)
userinfoResponseZoneinfoL f UserinfoResponse{..} = (\userinfoResponseZoneinfo -> UserinfoResponse { userinfoResponseZoneinfo, ..} ) <$> f userinfoResponseZoneinfo
{-# INLINE userinfoResponseZoneinfoL #-}



-- * Version

-- | 'versionVersion' Lens
versionVersionL :: Lens_' Version (Maybe Text)
versionVersionL f Version{..} = (\versionVersion -> Version { versionVersion, ..} ) <$> f versionVersion
{-# INLINE versionVersionL #-}



-- * Volume

-- | 'volumeCreatedAt' Lens
volumeCreatedAtL :: Lens_' Volume (Maybe Text)
volumeCreatedAtL f Volume{..} = (\volumeCreatedAt -> Volume { volumeCreatedAt, ..} ) <$> f volumeCreatedAt
{-# INLINE volumeCreatedAtL #-}

-- | 'volumeDriver' Lens
volumeDriverL :: Lens_' Volume (Text)
volumeDriverL f Volume{..} = (\volumeDriver -> Volume { volumeDriver, ..} ) <$> f volumeDriver
{-# INLINE volumeDriverL #-}

-- | 'volumeLabels' Lens
volumeLabelsL :: Lens_' Volume ((Map.Map String Text))
volumeLabelsL f Volume{..} = (\volumeLabels -> Volume { volumeLabels, ..} ) <$> f volumeLabels
{-# INLINE volumeLabelsL #-}

-- | 'volumeMountpoint' Lens
volumeMountpointL :: Lens_' Volume (Text)
volumeMountpointL f Volume{..} = (\volumeMountpoint -> Volume { volumeMountpoint, ..} ) <$> f volumeMountpoint
{-# INLINE volumeMountpointL #-}

-- | 'volumeName' Lens
volumeNameL :: Lens_' Volume (Text)
volumeNameL f Volume{..} = (\volumeName -> Volume { volumeName, ..} ) <$> f volumeName
{-# INLINE volumeNameL #-}

-- | 'volumeOptions' Lens
volumeOptionsL :: Lens_' Volume ((Map.Map String Text))
volumeOptionsL f Volume{..} = (\volumeOptions -> Volume { volumeOptions, ..} ) <$> f volumeOptions
{-# INLINE volumeOptionsL #-}

-- | 'volumeScope' Lens
volumeScopeL :: Lens_' Volume (Text)
volumeScopeL f Volume{..} = (\volumeScope -> Volume { volumeScope, ..} ) <$> f volumeScope
{-# INLINE volumeScopeL #-}

-- | 'volumeStatus' Lens
volumeStatusL :: Lens_' Volume (Maybe A.Value)
volumeStatusL f Volume{..} = (\volumeStatus -> Volume { volumeStatus, ..} ) <$> f volumeStatus
{-# INLINE volumeStatusL #-}

-- | 'volumeUsageData' Lens
volumeUsageDataL :: Lens_' Volume (Maybe VolumeUsageData)
volumeUsageDataL f Volume{..} = (\volumeUsageData -> Volume { volumeUsageData, ..} ) <$> f volumeUsageData
{-# INLINE volumeUsageDataL #-}



-- * VolumeUsageData

-- | 'volumeUsageDataRefCount' Lens
volumeUsageDataRefCountL :: Lens_' VolumeUsageData (Integer)
volumeUsageDataRefCountL f VolumeUsageData{..} = (\volumeUsageDataRefCount -> VolumeUsageData { volumeUsageDataRefCount, ..} ) <$> f volumeUsageDataRefCount
{-# INLINE volumeUsageDataRefCountL #-}

-- | 'volumeUsageDataSize' Lens
volumeUsageDataSizeL :: Lens_' VolumeUsageData (Integer)
volumeUsageDataSizeL f VolumeUsageData{..} = (\volumeUsageDataSize -> VolumeUsageData { volumeUsageDataSize, ..} ) <$> f volumeUsageDataSize
{-# INLINE volumeUsageDataSizeL #-}



-- * WellKnown

-- | 'wellKnownAuthorizationEndpoint' Lens
wellKnownAuthorizationEndpointL :: Lens_' WellKnown (Text)
wellKnownAuthorizationEndpointL f WellKnown{..} = (\wellKnownAuthorizationEndpoint -> WellKnown { wellKnownAuthorizationEndpoint, ..} ) <$> f wellKnownAuthorizationEndpoint
{-# INLINE wellKnownAuthorizationEndpointL #-}

-- | 'wellKnownBackchannelLogoutSessionSupported' Lens
wellKnownBackchannelLogoutSessionSupportedL :: Lens_' WellKnown (Maybe Bool)
wellKnownBackchannelLogoutSessionSupportedL f WellKnown{..} = (\wellKnownBackchannelLogoutSessionSupported -> WellKnown { wellKnownBackchannelLogoutSessionSupported, ..} ) <$> f wellKnownBackchannelLogoutSessionSupported
{-# INLINE wellKnownBackchannelLogoutSessionSupportedL #-}

-- | 'wellKnownBackchannelLogoutSupported' Lens
wellKnownBackchannelLogoutSupportedL :: Lens_' WellKnown (Maybe Bool)
wellKnownBackchannelLogoutSupportedL f WellKnown{..} = (\wellKnownBackchannelLogoutSupported -> WellKnown { wellKnownBackchannelLogoutSupported, ..} ) <$> f wellKnownBackchannelLogoutSupported
{-# INLINE wellKnownBackchannelLogoutSupportedL #-}

-- | 'wellKnownClaimsParameterSupported' Lens
wellKnownClaimsParameterSupportedL :: Lens_' WellKnown (Maybe Bool)
wellKnownClaimsParameterSupportedL f WellKnown{..} = (\wellKnownClaimsParameterSupported -> WellKnown { wellKnownClaimsParameterSupported, ..} ) <$> f wellKnownClaimsParameterSupported
{-# INLINE wellKnownClaimsParameterSupportedL #-}

-- | 'wellKnownClaimsSupported' Lens
wellKnownClaimsSupportedL :: Lens_' WellKnown (Maybe [Text])
wellKnownClaimsSupportedL f WellKnown{..} = (\wellKnownClaimsSupported -> WellKnown { wellKnownClaimsSupported, ..} ) <$> f wellKnownClaimsSupported
{-# INLINE wellKnownClaimsSupportedL #-}

-- | 'wellKnownEndSessionEndpoint' Lens
wellKnownEndSessionEndpointL :: Lens_' WellKnown (Maybe Text)
wellKnownEndSessionEndpointL f WellKnown{..} = (\wellKnownEndSessionEndpoint -> WellKnown { wellKnownEndSessionEndpoint, ..} ) <$> f wellKnownEndSessionEndpoint
{-# INLINE wellKnownEndSessionEndpointL #-}

-- | 'wellKnownFrontchannelLogoutSessionSupported' Lens
wellKnownFrontchannelLogoutSessionSupportedL :: Lens_' WellKnown (Maybe Bool)
wellKnownFrontchannelLogoutSessionSupportedL f WellKnown{..} = (\wellKnownFrontchannelLogoutSessionSupported -> WellKnown { wellKnownFrontchannelLogoutSessionSupported, ..} ) <$> f wellKnownFrontchannelLogoutSessionSupported
{-# INLINE wellKnownFrontchannelLogoutSessionSupportedL #-}

-- | 'wellKnownFrontchannelLogoutSupported' Lens
wellKnownFrontchannelLogoutSupportedL :: Lens_' WellKnown (Maybe Bool)
wellKnownFrontchannelLogoutSupportedL f WellKnown{..} = (\wellKnownFrontchannelLogoutSupported -> WellKnown { wellKnownFrontchannelLogoutSupported, ..} ) <$> f wellKnownFrontchannelLogoutSupported
{-# INLINE wellKnownFrontchannelLogoutSupportedL #-}

-- | 'wellKnownGrantTypesSupported' Lens
wellKnownGrantTypesSupportedL :: Lens_' WellKnown (Maybe [Text])
wellKnownGrantTypesSupportedL f WellKnown{..} = (\wellKnownGrantTypesSupported -> WellKnown { wellKnownGrantTypesSupported, ..} ) <$> f wellKnownGrantTypesSupported
{-# INLINE wellKnownGrantTypesSupportedL #-}

-- | 'wellKnownIdTokenSigningAlgValuesSupported' Lens
wellKnownIdTokenSigningAlgValuesSupportedL :: Lens_' WellKnown ([Text])
wellKnownIdTokenSigningAlgValuesSupportedL f WellKnown{..} = (\wellKnownIdTokenSigningAlgValuesSupported -> WellKnown { wellKnownIdTokenSigningAlgValuesSupported, ..} ) <$> f wellKnownIdTokenSigningAlgValuesSupported
{-# INLINE wellKnownIdTokenSigningAlgValuesSupportedL #-}

-- | 'wellKnownIssuer' Lens
wellKnownIssuerL :: Lens_' WellKnown (Text)
wellKnownIssuerL f WellKnown{..} = (\wellKnownIssuer -> WellKnown { wellKnownIssuer, ..} ) <$> f wellKnownIssuer
{-# INLINE wellKnownIssuerL #-}

-- | 'wellKnownJwksUri' Lens
wellKnownJwksUriL :: Lens_' WellKnown (Text)
wellKnownJwksUriL f WellKnown{..} = (\wellKnownJwksUri -> WellKnown { wellKnownJwksUri, ..} ) <$> f wellKnownJwksUri
{-# INLINE wellKnownJwksUriL #-}

-- | 'wellKnownRegistrationEndpoint' Lens
wellKnownRegistrationEndpointL :: Lens_' WellKnown (Maybe Text)
wellKnownRegistrationEndpointL f WellKnown{..} = (\wellKnownRegistrationEndpoint -> WellKnown { wellKnownRegistrationEndpoint, ..} ) <$> f wellKnownRegistrationEndpoint
{-# INLINE wellKnownRegistrationEndpointL #-}

-- | 'wellKnownRequestObjectSigningAlgValuesSupported' Lens
wellKnownRequestObjectSigningAlgValuesSupportedL :: Lens_' WellKnown (Maybe [Text])
wellKnownRequestObjectSigningAlgValuesSupportedL f WellKnown{..} = (\wellKnownRequestObjectSigningAlgValuesSupported -> WellKnown { wellKnownRequestObjectSigningAlgValuesSupported, ..} ) <$> f wellKnownRequestObjectSigningAlgValuesSupported
{-# INLINE wellKnownRequestObjectSigningAlgValuesSupportedL #-}

-- | 'wellKnownRequestParameterSupported' Lens
wellKnownRequestParameterSupportedL :: Lens_' WellKnown (Maybe Bool)
wellKnownRequestParameterSupportedL f WellKnown{..} = (\wellKnownRequestParameterSupported -> WellKnown { wellKnownRequestParameterSupported, ..} ) <$> f wellKnownRequestParameterSupported
{-# INLINE wellKnownRequestParameterSupportedL #-}

-- | 'wellKnownRequestUriParameterSupported' Lens
wellKnownRequestUriParameterSupportedL :: Lens_' WellKnown (Maybe Bool)
wellKnownRequestUriParameterSupportedL f WellKnown{..} = (\wellKnownRequestUriParameterSupported -> WellKnown { wellKnownRequestUriParameterSupported, ..} ) <$> f wellKnownRequestUriParameterSupported
{-# INLINE wellKnownRequestUriParameterSupportedL #-}

-- | 'wellKnownRequireRequestUriRegistration' Lens
wellKnownRequireRequestUriRegistrationL :: Lens_' WellKnown (Maybe Bool)
wellKnownRequireRequestUriRegistrationL f WellKnown{..} = (\wellKnownRequireRequestUriRegistration -> WellKnown { wellKnownRequireRequestUriRegistration, ..} ) <$> f wellKnownRequireRequestUriRegistration
{-# INLINE wellKnownRequireRequestUriRegistrationL #-}

-- | 'wellKnownResponseModesSupported' Lens
wellKnownResponseModesSupportedL :: Lens_' WellKnown (Maybe [Text])
wellKnownResponseModesSupportedL f WellKnown{..} = (\wellKnownResponseModesSupported -> WellKnown { wellKnownResponseModesSupported, ..} ) <$> f wellKnownResponseModesSupported
{-# INLINE wellKnownResponseModesSupportedL #-}

-- | 'wellKnownResponseTypesSupported' Lens
wellKnownResponseTypesSupportedL :: Lens_' WellKnown ([Text])
wellKnownResponseTypesSupportedL f WellKnown{..} = (\wellKnownResponseTypesSupported -> WellKnown { wellKnownResponseTypesSupported, ..} ) <$> f wellKnownResponseTypesSupported
{-# INLINE wellKnownResponseTypesSupportedL #-}

-- | 'wellKnownRevocationEndpoint' Lens
wellKnownRevocationEndpointL :: Lens_' WellKnown (Maybe Text)
wellKnownRevocationEndpointL f WellKnown{..} = (\wellKnownRevocationEndpoint -> WellKnown { wellKnownRevocationEndpoint, ..} ) <$> f wellKnownRevocationEndpoint
{-# INLINE wellKnownRevocationEndpointL #-}

-- | 'wellKnownScopesSupported' Lens
wellKnownScopesSupportedL :: Lens_' WellKnown (Maybe [Text])
wellKnownScopesSupportedL f WellKnown{..} = (\wellKnownScopesSupported -> WellKnown { wellKnownScopesSupported, ..} ) <$> f wellKnownScopesSupported
{-# INLINE wellKnownScopesSupportedL #-}

-- | 'wellKnownSubjectTypesSupported' Lens
wellKnownSubjectTypesSupportedL :: Lens_' WellKnown ([Text])
wellKnownSubjectTypesSupportedL f WellKnown{..} = (\wellKnownSubjectTypesSupported -> WellKnown { wellKnownSubjectTypesSupported, ..} ) <$> f wellKnownSubjectTypesSupported
{-# INLINE wellKnownSubjectTypesSupportedL #-}

-- | 'wellKnownTokenEndpoint' Lens
wellKnownTokenEndpointL :: Lens_' WellKnown (Text)
wellKnownTokenEndpointL f WellKnown{..} = (\wellKnownTokenEndpoint -> WellKnown { wellKnownTokenEndpoint, ..} ) <$> f wellKnownTokenEndpoint
{-# INLINE wellKnownTokenEndpointL #-}

-- | 'wellKnownTokenEndpointAuthMethodsSupported' Lens
wellKnownTokenEndpointAuthMethodsSupportedL :: Lens_' WellKnown (Maybe [Text])
wellKnownTokenEndpointAuthMethodsSupportedL f WellKnown{..} = (\wellKnownTokenEndpointAuthMethodsSupported -> WellKnown { wellKnownTokenEndpointAuthMethodsSupported, ..} ) <$> f wellKnownTokenEndpointAuthMethodsSupported
{-# INLINE wellKnownTokenEndpointAuthMethodsSupportedL #-}

-- | 'wellKnownUserinfoEndpoint' Lens
wellKnownUserinfoEndpointL :: Lens_' WellKnown (Maybe Text)
wellKnownUserinfoEndpointL f WellKnown{..} = (\wellKnownUserinfoEndpoint -> WellKnown { wellKnownUserinfoEndpoint, ..} ) <$> f wellKnownUserinfoEndpoint
{-# INLINE wellKnownUserinfoEndpointL #-}

-- | 'wellKnownUserinfoSigningAlgValuesSupported' Lens
wellKnownUserinfoSigningAlgValuesSupportedL :: Lens_' WellKnown (Maybe [Text])
wellKnownUserinfoSigningAlgValuesSupportedL f WellKnown{..} = (\wellKnownUserinfoSigningAlgValuesSupported -> WellKnown { wellKnownUserinfoSigningAlgValuesSupported, ..} ) <$> f wellKnownUserinfoSigningAlgValuesSupported
{-# INLINE wellKnownUserinfoSigningAlgValuesSupportedL #-}


